
# use the packages for Go
.ubuntu-template: &ubuntu-template
  variables:
    DEBIAN_FRONTEND: noninteractive
    GOPATH: /usr/share/gocode
  before_script:
    - apt-get -qy update
    - apt-get -qy install --no-install-recommends
        build-essential
        ca-certificates
        golang-github-smartystreets-goconvey-dev
        golang-race-detector-runtime
        libx11-dev

# use Go installed as part of the official, Debian-based Docker images
.golang-docker-debian-template: &golang-docker-debian-template
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
    - apt-get -qy update
    - apt-get -qy install --no-install-recommends
        ca-certificates
        libx11-dev
    - go get github.com/smartystreets/goconvey/convey

.build_env_setup: &build_env_setup |
  set -x
  apt-get -qy update
  apt-get -qy install --no-install-recommends git pkg-config wget
  # Create symbolic links under $GOPATH, this is needed for local build
  export src=$GOPATH/src
  mkdir -p $src/git.torproject.org/pluggable-transports
  mkdir -p $src/github.com/keroserene
  mkdir -p $src/gitlab.com/$CI_PROJECT_NAMESPACE
  ln -s $CI_PROJECT_DIR $src/git.torproject.org/pluggable-transports/snowflake
  ln -s $CI_PROJECT_DIR $src/git.torproject.org/pluggable-transports/snowflake.git
  ln -s $CI_PROJECT_DIR $src/github.com/keroserene/snowflake
  ln -s $CI_PROJECT_DIR $src/github.com/keroserene/snowflake.git
  ln -s $CI_PROJECT_DIR $src/gitlab.com/$CI_PROJECT_PATH
  ln -s $CI_PROJECT_DIR $src/gitlab.com/${CI_PROJECT_PATH}.git
  git checkout -B $CI_COMMIT_REF_NAME origin/$CI_COMMIT_REF_NAME # force to a branch for `go get -u`
  set +x

.artifacts-template: &artifacts-template
  artifacts:
    name: "${CI_PROJECT_PATH}_${CI_JOB_STAGE}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}"
    untracked: true
    paths:
      - client/client
      - client/*.aar
      - client/*.jar
    when:
      always
    expire_in: 1 day
  after_script:
    - echo "Download debug artifacts from https://gitlab.com/${CI_PROJECT_PATH}/-/jobs"

.script-template: &script-template
  script:
    - *build_env_setup
    - cd $src/github.com/keroserene/snowflake
    - go get ./...
    - go build ./...
    - go vet ./...
    - go test -v -race ./...

    - wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
    - export NVM_DIR="$HOME/.nvm"
    - . "$NVM_DIR/nvm.sh"
    - export TRAVIS_NODE_VERSION="4.2"
    - nvm install $TRAVIS_NODE_VERSION
    - cd proxy
    - npm install
    - npm run-script lint
    - npm test

# -- jobs ------------------------------------------------------------

debian-stretch_go-1.10:
  image: golang:1.10-stretch
  <<: *golang-docker-debian-template
  <<: *artifacts-template
  <<: *script-template

debian-stretch_go-1.11:
  image: golang:1.11-stretch
  <<: *golang-docker-debian-template
  <<: *artifacts-template
  <<: *script-template

ubuntu-devel:
  image: ubuntu:devel
  <<: *ubuntu-template
  <<: *artifacts-template
  <<: *script-template

ubuntu-rolling:
  image: ubuntu:rolling
  <<: *ubuntu-template
  <<: *artifacts-template
  <<: *script-template

ubuntu-lts:
  image: ubuntu:latest
  <<: *ubuntu-template
  <<: *artifacts-template
  <<: *script-template
